/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package titanplayer;

import javax.swing.JFileChooser;

/**
 *
 * @author Rocky
 * insert comment to allow push
 */
public class PlayerGUI extends javax.swing.JFrame {

    /**
     * Creates new form PlayerGUI
     */
    public PlayerGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        libraryWindow = new javax.swing.JScrollPane();
        songsInLibrary = new javax.swing.JList();
        libraryLabel = new javax.swing.JLabel();
        playlistWindow = new javax.swing.JScrollPane();
        songsInPlaylist = new javax.swing.JList();
        currentPlaylist = new javax.swing.JLabel();
        addToLibrary = new javax.swing.JButton();
        deleteFromLibrary = new javax.swing.JButton();
        sortLibraryByArtist = new javax.swing.JRadioButton();
        sortLibraryByTitle = new javax.swing.JRadioButton();
        addToPlaylist = new javax.swing.JButton();
        savePlaylist = new javax.swing.JButton();
        deleteFromPlaylist = new javax.swing.JButton();
        nowPlaying = new javax.swing.JLabel();
        currentSongTitle = new javax.swing.JLabel();
        currentPlaceInSong = new javax.swing.JLabel();
        totalSongLength = new javax.swing.JLabel();
        playCurrentSong = new javax.swing.JButton();
        pauseCurrentSong = new javax.swing.JButton();
        stopCurrentSong = new javax.swing.JButton();
        playPreviousSong = new javax.swing.JButton();
        playNextSong = new javax.swing.JButton();
        librarySelection = new javax.swing.JComboBox();
        playlistSelection = new javax.swing.JComboBox();
        newPlaylist = new javax.swing.JButton();
        savePlaylist2 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        addToLibraryMenuItem = new javax.swing.JMenu();
        newPlaylistMenuItem = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Titan Player");

        songsInLibrary.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        libraryWindow.setViewportView(songsInLibrary);

        libraryLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        libraryLabel.setText(" Library:");

        songsInPlaylist.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        playlistWindow.setViewportView(songsInPlaylist);

        currentPlaylist.setText("Current Playlist");

        addToLibrary.setText("Add To Library");

        deleteFromLibrary.setText("Delete Selected");
        deleteFromLibrary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteFromLibraryActionPerformed(evt);
            }
        });

        sortLibraryByArtist.setText("Sort By Title");

        sortLibraryByTitle.setText("Sort By Artist");

        addToPlaylist.setText("Add to Playlist");

        savePlaylist.setText("Save Playlist");

        deleteFromPlaylist.setText("Delete Selected");
        deleteFromPlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteFromPlaylistActionPerformed(evt);
            }
        });

        nowPlaying.setText("Now Playing:");

        currentSongTitle.setText("current song");

        currentPlaceInSong.setText("Time display");

        totalSongLength.setText("Time display");

        playCurrentSong.setText("Play");

        pauseCurrentSong.setText("Pause");

        stopCurrentSong.setText("Stop");

        playPreviousSong.setText("Previous Song");

        playNextSong.setText("Next Song");

        librarySelection.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        playlistSelection.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        newPlaylist.setText("New Playlist");
        newPlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newPlaylistActionPerformed(evt);
            }
        });

        savePlaylist2.setText("Delete Playlist");
        savePlaylist2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savePlaylist2ActionPerformed(evt);
            }
        });

        addToLibraryMenuItem.setText("Add Song To Library");
        addToLibraryMenuItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addToLibraryMenuItemMouseClicked(evt);
            }
        });
        jMenuBar1.add(addToLibraryMenuItem);

        newPlaylistMenuItem.setText("New Playlist");
        newPlaylistMenuItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newPlaylistMenuItemMouseClicked(evt);
            }
        });
        newPlaylistMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newPlaylistMenuItemActionPerformed(evt);
            }
        });
        jMenuBar1.add(newPlaylistMenuItem);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(169, 169, 169)
                                .addComponent(playCurrentSong)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(pauseCurrentSong)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(stopCurrentSong)
                                .addGap(107, 107, 107)
                                .addComponent(playPreviousSong)
                                .addGap(18, 18, 18)
                                .addComponent(playNextSong))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(nowPlaying)
                                .addGap(18, 18, 18)
                                .addComponent(currentSongTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(currentPlaceInSong))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(73, 73, 73)
                                .addComponent(totalSongLength))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(libraryWindow, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addToPlaylist)
                                    .addComponent(newPlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(savePlaylist2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(sortLibraryByArtist)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(sortLibraryByTitle))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(addToLibrary)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(deleteFromLibrary))))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(libraryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(librarySelection, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(75, 75, 75)
                                .addComponent(currentPlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(playlistWindow, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(savePlaylist)
                                .addGap(18, 18, 18)
                                .addComponent(deleteFromPlaylist))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(playlistSelection, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(libraryLabel)
                    .addComponent(librarySelection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(currentPlaylist)
                    .addComponent(playlistSelection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(savePlaylist)
                            .addComponent(deleteFromPlaylist))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(92, 92, 92)
                                .addComponent(newPlaylist)
                                .addGap(31, 31, 31)
                                .addComponent(addToPlaylist)
                                .addGap(32, 32, 32)
                                .addComponent(savePlaylist2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addComponent(playlistWindow, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addToLibrary)
                            .addComponent(deleteFromLibrary))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sortLibraryByArtist)
                            .addComponent(sortLibraryByTitle))
                        .addGap(18, 18, 18)
                        .addComponent(libraryWindow, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(currentSongTitle)
                    .addComponent(nowPlaying)
                    .addComponent(currentPlaceInSong))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(totalSongLength)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(playCurrentSong)
                    .addComponent(pauseCurrentSong)
                    .addComponent(stopCurrentSong)
                    .addComponent(playPreviousSong)
                    .addComponent(playNextSong))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deleteFromLibraryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteFromLibraryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteFromLibraryActionPerformed

    private void deleteFromPlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteFromPlaylistActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteFromPlaylistActionPerformed

    private void newPlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newPlaylistActionPerformed
        // TODO add your handling code here:
        EnterNewPlaylistName newNameScreen = new EnterNewPlaylistName();
        newNameScreen.setVisible(true);
    }//GEN-LAST:event_newPlaylistActionPerformed

    private void savePlaylist2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savePlaylist2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_savePlaylist2ActionPerformed

    private void newPlaylistMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newPlaylistMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newPlaylistMenuItemActionPerformed

    private void newPlaylistMenuItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newPlaylistMenuItemMouseClicked
        // TODO add your handling code here:
        EnterNewPlaylistName newNameScreen = new EnterNewPlaylistName();
        newNameScreen.setVisible(true);
    }//GEN-LAST:event_newPlaylistMenuItemMouseClicked

    private void addToLibraryMenuItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addToLibraryMenuItemMouseClicked
        // TODO add your handling code here:
        
        MusicFileChooser addMusicFiles = new MusicFileChooser();
        //addMusicFiles.setVisible(true);
        
    }//GEN-LAST:event_addToLibraryMenuItemMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PlayerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PlayerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PlayerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PlayerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new PlayerGUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addToLibrary;
    private javax.swing.JMenu addToLibraryMenuItem;
    private javax.swing.JButton addToPlaylist;
    private javax.swing.JLabel currentPlaceInSong;
    private javax.swing.JLabel currentPlaylist;
    private javax.swing.JLabel currentSongTitle;
    private javax.swing.JButton deleteFromLibrary;
    private javax.swing.JButton deleteFromPlaylist;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JLabel libraryLabel;
    private javax.swing.JComboBox librarySelection;
    private javax.swing.JScrollPane libraryWindow;
    private javax.swing.JButton newPlaylist;
    private javax.swing.JMenu newPlaylistMenuItem;
    private javax.swing.JLabel nowPlaying;
    private javax.swing.JButton pauseCurrentSong;
    private javax.swing.JButton playCurrentSong;
    private javax.swing.JButton playNextSong;
    private javax.swing.JButton playPreviousSong;
    private javax.swing.JComboBox playlistSelection;
    private javax.swing.JScrollPane playlistWindow;
    private javax.swing.JButton savePlaylist;
    private javax.swing.JButton savePlaylist2;
    private javax.swing.JList songsInLibrary;
    private javax.swing.JList songsInPlaylist;
    private javax.swing.JRadioButton sortLibraryByArtist;
    private javax.swing.JRadioButton sortLibraryByTitle;
    private javax.swing.JButton stopCurrentSong;
    private javax.swing.JLabel totalSongLength;
    // End of variables declaration//GEN-END:variables
}
